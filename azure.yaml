# yaml-language-server: $schema=https://raw.githubusercontent.com/Azure/azure-dev/main/schemas/v1.0/azure.yaml.json

name: DurableMultiAgents
metadata:
    template: azd-init@1.5.0
services:
    TravelService.MultiAgent.Orchestrator:
        project: src\DurableAgent\TravelService.MultiAgent.Orchestrator
        host: function
        language: dotnet  
    TravelService.CustomerUI:
        project: src\WebApp\TravelService.CustomerUI
        host: appservice
        language: dotnet
    FlightService:
        project: src\Services\FlightService
        language: dotnet
        host: containerapp
        docker:
            path: ./Dockerfile
            image: 'durablemultiagents/flightservice-contosotravelagency:latest'                               
    WeatherService:
        project: src\Services\WeatherService
        host: containerapp
        language: dotnet
        docker:
            path: ./Dockerfile
            image: 'durablemultiagents/weatherservice-contosotravelagency:latest'            
    UserService:
        project: src\Services\UserService
        host: containerapp
        language: dotnet
        docker:
            path: ./Dockerfile
            image: 'durablemultiagents/userservice-contosotravelagency:latest'            
    BookingService:
        project: src\Services\BookingService
        host: containerapp
        language: dotnet        
        docker:
            path: ./Dockerfile
            image: 'durablemultiagents/bookingservice-contosotravelagency:latest'                       
hooks: 
  postprovision:    
    shell: pwsh
    run: |     
      $envVars = azd env get-values --output json | ConvertFrom-Json      
      $cosmosDBAccountName = $envVars.COSMOSDB_ACCOUNT_NAME
      $resourceGroupName = $envVars.RESOURCE_GROUP_NAME      
      $subscriptionId = $envVars.AZURE_SUBSCRIPTION_ID
      $flightConnectionString = $envVars.FLIGHT_CONNECTION_STRING
      $userConnectionString = $envVars.USER_CONNECTION_STRING
      $tenantId = $envVars.AZURE_TENANT_ID
      $hardReload = $envVars.HARD_RELOAD -eq "true" ? $true : $false
      ./scripts/seedData.ps1 -cosmosDBAccountName $cosmosDBAccountName -resourceGroupName $resourceGroupName -subscriptionId $subscriptionId -tenantId $tenantId -flightConnectionString $flightConnectionString -userConnectionString $userConnectionString -hardReload $hardReload
    continueOnError: false
    interactive: false